version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: sena_acuaponia_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: sena_acuaponia
      MYSQL_USER: sena_user
      MYSQL_PASSWORD: sena_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - sena_network

  # Broker MQTT (Eclipse Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: sena_acuaponia_mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - sena_network

  # Redis para cach√© y sesiones
  redis:
    image: redis:7-alpine
    container_name: sena_acuaponia_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sena_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sena_acuaponia_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://sena_user:sena_password@mysql:3306/sena_acuaponia
      MQTT_BROKER_URL: mqtt://mosquitto:1883
      REDIS_URL: redis://redis:6379
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - mosquitto
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    networks:
      - sena_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sena_acuaponia_frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api
      VITE_SOCKET_URL: http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - sena_network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: sena_acuaponia_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sena_network

volumes:
  mysql_data:
  redis_data:

networks:
  sena_network:
    driver: bridge